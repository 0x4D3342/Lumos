
language: cpp

sudo: false

dist: trusty

matrix:
  include:
    - os: osx
      env: BUILD_TYPE=native
      language: c++
      compiler: clang
    # - os: osx
    #   env: BUILD_TYPE=IOS
    #   language: c++
    #   compiler: clang
    - os: linux
      language: c++
      compiler: gcc
      env: BUILD_TYPE=native COMPILER_NAME=gcc CXX=g++-7 CC=gcc-7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - libxrandr-dev
            - libxinerama-dev
            - libxcursor-dev
            - libxi-dev
            - libopenal-dev
    - os: linux
      language: c++
      compiler: clang
      env: BUILD_TYPE=native COMPILER_NAME=clang CXX=clang++-6.0 CC=clang-6.0
      addons:
        apt:
          sources:
            - kubuntu-backports
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - libxrandr-dev
            - libxinerama-dev
            - libxcursor-dev
            - libxi-dev
            - libc++-dev
            - clang-6.0
            - gcc-7
            - g++-7
            - libopenal-dev
before_install:
  - chmod +x ./Scripts/travis-build.sh
  - chmod +x ./Scripts/cmake-android.sh
  - chmod +x ./Scripts/cmake-ios.sh
  - chmod +x ./Scripts/cmake-make.sh
  - chmod +x ./Scripts/premake-make.sh
  - chmod +x ./Tools/linux/premake5
  - cd / && sudo wget -O VulkanSDK.run https://vulkan.lunarg.com/sdk/download/1.0.85.0/linux/vulkansdk-linux-x86_64-1.0.85.0.run?human=true && sudo chmod ugo+x VulkanSDK.run
  - sudo ./VulkanSDK.run
  - export VULKAN_SDK="/VulkanSDK/1.0.85.0/x86_64"

install:
  - if [ "$CXX" = "g++" ] && [ $TRAVIS_OS_NAME == linux ]; then export CXX="g++-7" CC="gcc-7"; fi
  - if [ "$CXX" = "clang++" ] && [ $TRAVIS_OS_NAME == linux ]; then export CXX="clang++-6.0" CC="clang-6.0"; fi
before_script:

script:
  - ./Scripts/travis-build.sh

branches:
  only:
    - master
    - dev

notifications:
  email:
    on_success: change
    on_failure: change
